"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_tsparticles_interaction-particles-links_browser_Linker_js"],{

/***/ "./node_modules/@tsparticles/interaction-particles-links/browser/Linker.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tsparticles/interaction-particles-links/browser/Linker.js ***!
  \*********************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Linker: function() { return /* binding */ Linker; }\n/* harmony export */ });\n/* harmony import */ var _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @tsparticles/engine */ \"./node_modules/@tsparticles/engine/browser/index.js\");\n/* harmony import */ var _Options_Classes_Links_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Options/Classes/Links.js */ \"./node_modules/@tsparticles/interaction-particles-links/browser/Options/Classes/Links.js\");\n\n\nconst squarePower = 2, opacityOffset = 1, origin = {\n    x: 0,\n    y: 0,\n}, minDistance = 0;\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getDistances)(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** squarePower + warpDistances.y ** squarePower);\n}\nclass Linker extends _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = (0,_tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.getLinkRandomColor)(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < origin.x || pos1.y < origin.y || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? minDistance, warp = linkOpt1.warp;\n        let range;\n        if (warp) {\n            const { CircleWarp } = await __webpack_require__.e(/*! import() */ \"node_modules_tsparticles_interaction-particles-links_browser_CircleWarp_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./CircleWarp.js */ \"./node_modules/@tsparticles/interaction-particles-links/browser/CircleWarp.js\"));\n            range = new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize);\n        }\n        else {\n            range = new _tsparticles_engine__WEBPACK_IMPORTED_MODULE_0__.Circle(pos1.x, pos1.y, optDistance);\n        }\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < origin.x || pos2.y < origin.y || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (opacityOffset - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new _Options_Classes_Links_js__WEBPACK_IMPORTED_MODULE_1__.Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links);\n        }\n    }\n    reset() {\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHRzcGFydGljbGVzL2ludGVyYWN0aW9uLXBhcnRpY2xlcy1saW5rcy9icm93c2VyL0xpbmtlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUc7QUFDdEQ7QUFDbkQ7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0EsWUFBWSxtQkFBbUIsRUFBRSxpRUFBWTtBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHFCQUFxQix3RUFBdUI7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix1RUFBa0I7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLGFBQWEsUUFBUSwrUUFBeUI7QUFDbEU7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVEQUFNO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyw0REFBSztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9AdHNwYXJ0aWNsZXMvaW50ZXJhY3Rpb24tcGFydGljbGVzLWxpbmtzL2Jyb3dzZXIvTGlua2VyLmpzPzM0YWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2lyY2xlLCBQYXJ0aWNsZXNJbnRlcmFjdG9yQmFzZSwgZ2V0RGlzdGFuY2VzLCBnZXRMaW5rUmFuZG9tQ29sb3IsIH0gZnJvbSBcIkB0c3BhcnRpY2xlcy9lbmdpbmVcIjtcbmltcG9ydCB7IExpbmtzIH0gZnJvbSBcIi4vT3B0aW9ucy9DbGFzc2VzL0xpbmtzLmpzXCI7XG5jb25zdCBzcXVhcmVQb3dlciA9IDIsIG9wYWNpdHlPZmZzZXQgPSAxLCBvcmlnaW4gPSB7XG4gICAgeDogMCxcbiAgICB5OiAwLFxufSwgbWluRGlzdGFuY2UgPSAwO1xuZnVuY3Rpb24gZ2V0TGlua0Rpc3RhbmNlKHBvczEsIHBvczIsIG9wdERpc3RhbmNlLCBjYW52YXNTaXplLCB3YXJwKSB7XG4gICAgY29uc3QgeyBkeCwgZHksIGRpc3RhbmNlIH0gPSBnZXREaXN0YW5jZXMocG9zMSwgcG9zMik7XG4gICAgaWYgKCF3YXJwIHx8IGRpc3RhbmNlIDw9IG9wdERpc3RhbmNlKSB7XG4gICAgICAgIHJldHVybiBkaXN0YW5jZTtcbiAgICB9XG4gICAgY29uc3QgYWJzRGlmZnMgPSB7XG4gICAgICAgIHg6IE1hdGguYWJzKGR4KSxcbiAgICAgICAgeTogTWF0aC5hYnMoZHkpLFxuICAgIH0sIHdhcnBEaXN0YW5jZXMgPSB7XG4gICAgICAgIHg6IE1hdGgubWluKGFic0RpZmZzLngsIGNhbnZhc1NpemUud2lkdGggLSBhYnNEaWZmcy54KSxcbiAgICAgICAgeTogTWF0aC5taW4oYWJzRGlmZnMueSwgY2FudmFzU2l6ZS5oZWlnaHQgLSBhYnNEaWZmcy55KSxcbiAgICB9O1xuICAgIHJldHVybiBNYXRoLnNxcnQod2FycERpc3RhbmNlcy54ICoqIHNxdWFyZVBvd2VyICsgd2FycERpc3RhbmNlcy55ICoqIHNxdWFyZVBvd2VyKTtcbn1cbmV4cG9ydCBjbGFzcyBMaW5rZXIgZXh0ZW5kcyBQYXJ0aWNsZXNJbnRlcmFjdG9yQmFzZSB7XG4gICAgY29uc3RydWN0b3IoY29udGFpbmVyKSB7XG4gICAgICAgIHN1cGVyKGNvbnRhaW5lcik7XG4gICAgICAgIHRoaXMuX3NldENvbG9yID0gKHAxKSA9PiB7XG4gICAgICAgICAgICBpZiAoIXAxLm9wdGlvbnMubGlua3MpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBjb250YWluZXIgPSB0aGlzLmxpbmtDb250YWluZXIsIGxpbmtzT3B0aW9ucyA9IHAxLm9wdGlvbnMubGlua3M7XG4gICAgICAgICAgICBsZXQgbGlua0NvbG9yID0gbGlua3NPcHRpb25zLmlkID09PSB1bmRlZmluZWRcbiAgICAgICAgICAgICAgICA/IGNvbnRhaW5lci5wYXJ0aWNsZXMubGlua3NDb2xvclxuICAgICAgICAgICAgICAgIDogY29udGFpbmVyLnBhcnRpY2xlcy5saW5rc0NvbG9ycy5nZXQobGlua3NPcHRpb25zLmlkKTtcbiAgICAgICAgICAgIGlmIChsaW5rQ29sb3IpIHtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvcHRDb2xvciA9IGxpbmtzT3B0aW9ucy5jb2xvcjtcbiAgICAgICAgICAgIGxpbmtDb2xvciA9IGdldExpbmtSYW5kb21Db2xvcihvcHRDb2xvciwgbGlua3NPcHRpb25zLmJsaW5rLCBsaW5rc09wdGlvbnMuY29uc2VudCk7XG4gICAgICAgICAgICBpZiAobGlua3NPcHRpb25zLmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBjb250YWluZXIucGFydGljbGVzLmxpbmtzQ29sb3IgPSBsaW5rQ29sb3I7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb250YWluZXIucGFydGljbGVzLmxpbmtzQ29sb3JzLnNldChsaW5rc09wdGlvbnMuaWQsIGxpbmtDb2xvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgICAgIHRoaXMubGlua0NvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgICB9XG4gICAgY2xlYXIoKSB7XG4gICAgfVxuICAgIGluaXQoKSB7XG4gICAgICAgIHRoaXMubGlua0NvbnRhaW5lci5wYXJ0aWNsZXMubGlua3NDb2xvciA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5saW5rQ29udGFpbmVyLnBhcnRpY2xlcy5saW5rc0NvbG9ycyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgYXN5bmMgaW50ZXJhY3QocDEpIHtcbiAgICAgICAgaWYgKCFwMS5vcHRpb25zLmxpbmtzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcDEubGlua3MgPSBbXTtcbiAgICAgICAgY29uc3QgcG9zMSA9IHAxLmdldFBvc2l0aW9uKCksIGNvbnRhaW5lciA9IHRoaXMuY29udGFpbmVyLCBjYW52YXNTaXplID0gY29udGFpbmVyLmNhbnZhcy5zaXplO1xuICAgICAgICBpZiAocG9zMS54IDwgb3JpZ2luLnggfHwgcG9zMS55IDwgb3JpZ2luLnkgfHwgcG9zMS54ID4gY2FudmFzU2l6ZS53aWR0aCB8fCBwb3MxLnkgPiBjYW52YXNTaXplLmhlaWdodCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxpbmtPcHQxID0gcDEub3B0aW9ucy5saW5rcywgb3B0T3BhY2l0eSA9IGxpbmtPcHQxLm9wYWNpdHksIG9wdERpc3RhbmNlID0gcDEucmV0aW5hLmxpbmtzRGlzdGFuY2UgPz8gbWluRGlzdGFuY2UsIHdhcnAgPSBsaW5rT3B0MS53YXJwO1xuICAgICAgICBsZXQgcmFuZ2U7XG4gICAgICAgIGlmICh3YXJwKSB7XG4gICAgICAgICAgICBjb25zdCB7IENpcmNsZVdhcnAgfSA9IGF3YWl0IGltcG9ydChcIi4vQ2lyY2xlV2FycC5qc1wiKTtcbiAgICAgICAgICAgIHJhbmdlID0gbmV3IENpcmNsZVdhcnAocG9zMS54LCBwb3MxLnksIG9wdERpc3RhbmNlLCBjYW52YXNTaXplKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJhbmdlID0gbmV3IENpcmNsZShwb3MxLngsIHBvczEueSwgb3B0RGlzdGFuY2UpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gY29udGFpbmVyLnBhcnRpY2xlcy5xdWFkVHJlZS5xdWVyeShyYW5nZSk7XG4gICAgICAgIGZvciAoY29uc3QgcDIgb2YgcXVlcnkpIHtcbiAgICAgICAgICAgIGNvbnN0IGxpbmtPcHQyID0gcDIub3B0aW9ucy5saW5rcztcbiAgICAgICAgICAgIGlmIChwMSA9PT0gcDIgfHxcbiAgICAgICAgICAgICAgICAhbGlua09wdDI/LmVuYWJsZSB8fFxuICAgICAgICAgICAgICAgIGxpbmtPcHQxLmlkICE9PSBsaW5rT3B0Mi5pZCB8fFxuICAgICAgICAgICAgICAgIHAyLnNwYXduaW5nIHx8XG4gICAgICAgICAgICAgICAgcDIuZGVzdHJveWVkIHx8XG4gICAgICAgICAgICAgICAgIXAyLmxpbmtzIHx8XG4gICAgICAgICAgICAgICAgcDEubGlua3Muc29tZSgodCkgPT4gdC5kZXN0aW5hdGlvbiA9PT0gcDIpIHx8XG4gICAgICAgICAgICAgICAgcDIubGlua3Muc29tZSgodCkgPT4gdC5kZXN0aW5hdGlvbiA9PT0gcDEpKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBwb3MyID0gcDIuZ2V0UG9zaXRpb24oKTtcbiAgICAgICAgICAgIGlmIChwb3MyLnggPCBvcmlnaW4ueCB8fCBwb3MyLnkgPCBvcmlnaW4ueSB8fCBwb3MyLnggPiBjYW52YXNTaXplLndpZHRoIHx8IHBvczIueSA+IGNhbnZhc1NpemUuaGVpZ2h0KSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBkaXN0YW5jZSA9IGdldExpbmtEaXN0YW5jZShwb3MxLCBwb3MyLCBvcHREaXN0YW5jZSwgY2FudmFzU2l6ZSwgd2FycCAmJiBsaW5rT3B0Mi53YXJwKTtcbiAgICAgICAgICAgIGlmIChkaXN0YW5jZSA+IG9wdERpc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBvcGFjaXR5TGluZSA9IChvcGFjaXR5T2Zmc2V0IC0gZGlzdGFuY2UgLyBvcHREaXN0YW5jZSkgKiBvcHRPcGFjaXR5O1xuICAgICAgICAgICAgdGhpcy5fc2V0Q29sb3IocDEpO1xuICAgICAgICAgICAgcDEubGlua3MucHVzaCh7XG4gICAgICAgICAgICAgICAgZGVzdGluYXRpb246IHAyLFxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IG9wYWNpdHlMaW5lLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaXNFbmFibGVkKHBhcnRpY2xlKSB7XG4gICAgICAgIHJldHVybiAhIXBhcnRpY2xlLm9wdGlvbnMubGlua3M/LmVuYWJsZTtcbiAgICB9XG4gICAgbG9hZFBhcnRpY2xlc09wdGlvbnMob3B0aW9ucywgLi4uc291cmNlcykge1xuICAgICAgICBpZiAoIW9wdGlvbnMubGlua3MpIHtcbiAgICAgICAgICAgIG9wdGlvbnMubGlua3MgPSBuZXcgTGlua3MoKTtcbiAgICAgICAgfVxuICAgICAgICBmb3IgKGNvbnN0IHNvdXJjZSBvZiBzb3VyY2VzKSB7XG4gICAgICAgICAgICBvcHRpb25zLmxpbmtzLmxvYWQoc291cmNlPy5saW5rcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVzZXQoKSB7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@tsparticles/interaction-particles-links/browser/Linker.js\n"));

/***/ })

}]);