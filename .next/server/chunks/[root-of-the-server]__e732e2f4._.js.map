{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/aleks/github/javascript/alekscudars.com/pages/api/last-commit.js"],"sourcesContent":["// Get the last Git commit date for a specified file\r\nimport { exec } from 'child_process';\r\nimport path from 'path';\r\n\r\nexport default async function handler(req, res) {\r\n  const { file } = req.query;\r\n\r\n  // Basic validation to prevent directory traversal attacks\r\n  if (!file || file.includes('..') || !file.match(/^[a-zA-Z0-9\\/\\._-]+$/)) {\r\n    return res.status(400).json({ error: 'Invalid file parameter' });\r\n  }\r\n\r\n  // Get the file's absolute path - relative to project root\r\n  const filePath = path.join(process.cwd(), file);\r\n\r\n  try {\r\n    // Execute git command to get the last commit date for the specific file\r\n    exec(\r\n      `git log -1 --format=%cd --date=iso ${filePath}`,\r\n      (error, stdout, stderr) => {\r\n        if (error) {\r\n          console.error(`Error executing git command: ${error}`);\r\n          return res.status(500).json({ error: 'Failed to get commit date' });\r\n        }\r\n\r\n        if (stderr) {\r\n          console.error(`Git command stderr: ${stderr}`);\r\n        }\r\n\r\n        const date = stdout.trim();\r\n\r\n        if (!date) {\r\n          return res.status(404).json({ error: 'No commit history found' });\r\n        }\r\n\r\n        return res.status(200).json({ date });\r\n      }\r\n    );\r\n  } catch (error) {\r\n    console.error('Error:', error);\r\n    return res.status(500).json({ error: 'Internal server error' });\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,oDAAoD;;;;AACpD;AACA;;;AAEe,eAAe,QAAQ,GAAG,EAAE,GAAG;IAC5C,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,KAAK;IAE1B,0DAA0D;IAC1D,IAAI,CAAC,QAAQ,KAAK,QAAQ,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,yBAAyB;QACvE,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAyB;IAChE;IAEA,0DAA0D;IAC1D,MAAM,WAAW,iGAAA,CAAA,UAAI,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI;IAE1C,IAAI;QACF,wEAAwE;QACxE,CAAA,GAAA,mHAAA,CAAA,OAAI,AAAD,EACD,CAAC,mCAAmC,EAAE,UAAU,EAChD,CAAC,OAAO,QAAQ;YACd,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,CAAC,6BAA6B,EAAE,OAAO;gBACrD,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA4B;YACnE;YAEA,IAAI,QAAQ;gBACV,QAAQ,KAAK,CAAC,CAAC,oBAAoB,EAAE,QAAQ;YAC/C;YAEA,MAAM,OAAO,OAAO,IAAI;YAExB,IAAI,CAAC,MAAM;gBACT,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;oBAAE,OAAO;gBAA0B;YACjE;YAEA,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;gBAAE;YAAK;QACrC;IAEJ,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,UAAU;QACxB,OAAO,IAAI,MAAM,CAAC,KAAK,IAAI,CAAC;YAAE,OAAO;QAAwB;IAC/D;AACF","debugId":null}}]
}